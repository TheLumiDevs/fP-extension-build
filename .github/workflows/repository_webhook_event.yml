# This file for sending repository webhook events to a Discord channel.
# Action: tsickert/discord-webhook@v7.0.0

name: Repository Webhook Events

on:
  create:
  delete:
  fork:
  issue_comment:
  issues:
  pull_request:
  push:
  release:
  watch:

jobs:
  discord_notification:
    runs-on: ubuntu-latest
    steps:
      - name: Send notification for Push Event
        if: github.event_name == 'push'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          COMMITS_PAYLOAD: ${{ toJSON(github.event.commits) }}
          REPOSITORY: ${{ github.repository }}
          REF_NAME: ${{ github.ref_name }}
          COMPARE_URL: ${{ github.event.compare }}
          ACTOR: ${{ github.actor }}
          TIMESTAMP: ${{ github.event.head_commit.timestamp }}
        run: |
          fields=""
          for row in $(echo "$COMMITS_PAYLOAD" | jq -r '.[] | @base64'); do
              _jq() {
               echo ${row} | base64 --decode | jq -r ${1}
              }
             short_sha=$(_jq '.id' | cut -c1-7)
             url=$(_jq '.url')
             message=$(_jq '.message' | sed 's/"/\\"/g' | sed -z 's/\n/\\n/g')

             field="{\"name\": \"Commit [\`$short_sha\`]($url)\", \"value\": \"$message\", \"inline\": false}"
             if [ -z "$fields" ]; then
               fields="$field"
             else
               fields="$fields, $field"
             fi
          done

          json_payload=$(cat <<EOF
          {
            "embeds": [
              {
                "title": "[$REPOSITORY] New commits to $REF_NAME",
                "url": "$COMPARE_URL",
                "color": 3447003,
                "author": {
                  "name": "$ACTOR",
                  "url": "https://github.com/$ACTOR",
                  "icon_url": "https://github.com/$ACTOR.png"
                },
                "fields": [ $fields ],
                "timestamp": "$TIMESTAMP"
              }
            ]
          }
          EOF
          )
          curl -X POST -H "Content-Type: application/json" -d "$json_payload" "$DISCORD_WEBHOOK_URL"

      - name: Send notification for Other Events
        if: github.event_name != 'push'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          EVENT_NAME: ${{ github.event_name }}
          REPOSITORY: ${{ github.repository }}
          ACTOR: ${{ github.actor }}
          TIMESTAMP: ${{ github.event.head_commit.timestamp || github.event.comment.created_at || github.event.release.created_at || github.event.created_at || github.event.issue.created_at || github.event.pull_request.created_at }}
        run: |
          json_payload=$(cat <<EOF
          {
            "embeds": [
              {
                "title": "A new \`$EVENT_NAME\` event occurred in the \`$REPOSITORY\` repository",
                "fields": [
                  {
                    "name": "Triggered by",
                    "value": "$ACTOR",
                    "inline": true
                  }
                ],
                "timestamp": "$TIMESTAMP"
              }
            ]
          }
          EOF
          )
          curl -X POST -H "Content-Type: application/json" -d "$json_payload" "$DISCORD_WEBHOOK_URL"