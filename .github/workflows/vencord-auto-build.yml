name: Vencord fakeProfile auto build

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Checkout Vencord
        uses: actions/checkout@v4.1.7
        with:
          repository: Vendicated/Vencord
          path: Vencord

      - name: Get commit info
        id: get_commit_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd Vencord
          UPSTREAM_SHA=$(git rev-parse HEAD)
          echo "commit_sha=${UPSTREAM_SHA}" >> $GITHUB_OUTPUT
          echo "tag_name=build-${UPSTREAM_SHA}" >> $GITHUB_OUTPUT
          echo "commit_author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          cd ..
          LAST_BUILT_TAG=$(gh release list --limit 1 --json tagName -q '.[0].tagName')
          if [[ -z "$LAST_BUILT_TAG" || ! "$LAST_BUILT_TAG" == build-* ]]; then
            echo "LAST_BUILT_SHA=none" >> $GITHUB_OUTPUT
          else
            echo "LAST_BUILT_SHA=${LAST_BUILT_TAG#build-}" >> $GITHUB_OUTPUT
          fi
      - name: Check for new commits
        id: check_commits
        run: |
          if [[ "${{ steps.get_commit_info.outputs.commit_sha }}" == "${{ steps.get_commit_info.outputs.LAST_BUILT_SHA }}" ]]; then
            echo "Vencord has no new commits, skipping build."
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "New Vencord commit found, starting build..."
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: Clone fakeProfile plugin
        if: steps.check_commits.outputs.should_build == 'true'
        run: |
          mkdir -p Vencord/src/plugins
          git clone https://github.com/TheLumiDevs/fakeProfile.git Vencord/src/plugins/fakeProfile

      - name: Build extension and userscript
        if: steps.check_commits.outputs.should_build == 'true'
        run: |
          cd Vencord
          npm i -g pnpm
          pnpm i
          pnpm buildWeb

      - name: Get Current Time
        if: steps.check_commits.outputs.should_build == 'true'
        id: current-time
        run: |
          echo "date=$(TZ='UTC' date +'%Y/%m/%d %H:%M:%S')" >> $GITHUB_OUTPUT
          timestamp=$(date +%s)
          echo "timestamp=$timestamp" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Assets
        if: steps.check_commits.outputs.should_build == 'true'
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_url=$(gh release create ${{ steps.get_commit_info.outputs.tag_name }} \
            --title "fakeProfile Vencord ${{ steps.current-time.outputs.date }}" \
            --notes "
          ### Vencord last commit details
          - **Author:** ${{ steps.get_commit_info.outputs.commit_author }}
          - **Message:** [${{ steps.get_commit_info.outputs.commit_message }}](https://github.com/Vendicated/Vencord/commit/${{ steps.get_commit_info.outputs.commit_sha }})
          " \
            Vencord/dist/extension-chrome.zip Vencord/dist/extension-firefox.zip Vencord/dist/Vencord.user.js)
          echo "html_url=${release_url}" >> $GITHUB_OUTPUT

      - name: Get direct download URLs
        if: steps.check_commits.outputs.should_build == 'true'
        id: get_download_urls
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_info=$(gh api repos/${{ github.repository }}/releases/tags/${{ steps.get_commit_info.outputs.tag_name }})
          chrome_url=$(echo "$release_info" | jq -r '.assets[] | select(.name == "extension-chrome.zip") | .browser_download_url')
          firefox_url=$(echo "$release_info" | jq -r '.assets[] | select(.name == "extension-firefox.zip") | .browser_download_url')
          userscript_url=$(echo "$release_info" | jq -r '.assets[] | select(.name == "Vencord.user.js") | .browser_download_url')
          echo "chrome_url=$chrome_url" >> $GITHUB_OUTPUT
          echo "firefox_url=$firefox_url" >> $GITHUB_OUTPUT
          echo "userscript_url=$userscript_url" >> $GITHUB_OUTPUT

      - name: Get random quote
        if: steps.check_commits.outputs.should_build == 'true'
        id: random_quote
        run: echo "quote=$(shuf -n 1 quotes.txt)" >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        if: steps.check_commits.outputs.should_build == 'true'
        uses: SARISIA/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: "🎉 fakeProfile extension & userscript has new complete build! 🎉"
          description: |
            ## 📝 Build Info
            > - **Commit**
            >  - Code: [`${{ steps.get_commit_info.outputs.commit_sha }}`](https://github.com/Vendicated/Vencord/commit/${{ steps.get_commit_info.outputs.commit_sha }})
            >  - Title: [${{ steps.get_commit_info.outputs.commit_message }}](https://github.com/Vendicated/Vencord/commit/${{ steps.get_commit_info.outputs.commit_sha }})
            >  - Author: [${{ steps.get_commit_info.outputs.commit_author }}](https://github.com/Vendicated/Vencord/commits?author=${{ steps.get_commit_info.outputs.commit_author }})
            ## ℹ️ About this build
            > - **Release**: [${{ steps.current-time.outputs.date }}](${{ steps.create_release.outputs.html_url }})
            > - **Build**: <t:${{ steps.current-time.outputs.timestamp }}:R>
            ## 📥 Download
            > - **Chrome Extension**: **[Click Here](${{ steps.get_download_urls.outputs.chrome_url }})**
            > - **Firefox Extension**: **[Click Here](${{ steps.get_download_urls.outputs.firefox_url }})**
            > - **Userscript**: **[Click Here](${{ steps.get_download_urls.outputs.userscript_url }})**
            ## 💬 Quote
            ```txt
            ${{ steps.random_quote.outputs.quote }}
            ```
          color: 0x2ec27c
          username: Lumi Devs
          avatar_url: "https://images-ext-1.discordapp.net/external/hM4wlZ1R3US3OS3TnWyrFKYAkMMlLZHoD0BUQ7iv4AA/%3Fsize%3D4096/https/cdn.discordapp.com/icons/1117373291095662623/b570d8dea0899d437ac59dddec5c21dc.png?format=webp&quality=lossless"

      - name: Get random joke
        id: random_joke
        if: failure()
        run: echo "joke=$(shuf -n 1 jokes.txt)" >> $GITHUB_OUTPUT

      - name: Send failure notification
        if: failure()
        uses: SARISIA/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: failure
          title: "😭 Build Failed"
          description: |
            The Vencord build process failed. Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for logs.
            ## 😹 Joke
            ```txt
            ${{ steps.random_joke.outputs.joke }}
            ```
          color: 0xe74c3c
